name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  IMAGE: gcr.io/${{ secrets.GCP_PROJECT_ID }}/url-shortener

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: shortener_db
          POSTGRES_USER: shortener_user
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U shortener_user" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=5

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint
        run: |
          pip install flake8
          flake8 .

      - name: Run tests
        env:
          DB_HOST: localhost
          DB_NAME: shortener_db
          DB_USER: shortener_user
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          python manage.py test

  build-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Authenticate to GCP
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure gcloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          export_default_credentials: true

      - name: Configure Docker to use gcloud credential helper
        run: |
          gcloud auth configure-docker --quiet

      - name: Build & push Docker image
        run: |
          # tag by git SHA so each build is immutable
          docker build --platform linux/amd64 -t $IMAGE:${{ github.sha }} .
          docker push $IMAGE:${{ github.sha }}
          # also push "latest" tag
          docker tag $IMAGE:${{ github.sha }} $IMAGE:latest
          docker push $IMAGE:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: url-shortener-service
          image: ${{ env.IMAGE }}:latest
          region: us-central1
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          credentials: ${{ secrets.GCP_SA_KEY }}
          allow_unauthenticated: true
          concurrency: 80
          timeout: 300s
          set_env_vars: |
            DB_HOST=/cloudsql/${{ secrets.CLOUD_SQL_CONNECTION_NAME }}
            DB_NAME=shortener_db
            DB_USER=shortener_user
            ALLOWED_HOSTS=.run.app
          set_secrets: |
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          # mount your Cloud SQL instance
          add_cloudsql_instances: ${{ secrets.CLOUD_SQL_CONNECTION_NAME }}
