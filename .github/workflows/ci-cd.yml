name: CI/CD

on:
  push:
    branches: [main]
  pull_request:

env:
  GCP_PROJECT: ${{ secrets.GCP_PROJECT }}
  IMAGE: gcr.io/${{ secrets.GCP_PROJECT }}/url-shortener:latest

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: shortener_db
          POSTGRES_USER: shortener_user
          POSTGRES_PASSWORD: secretpw
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    # 2) Point Django at Postgres container (Created above)
    env:
      DB_HOST: localhost
      DB_PORT: 5432
      DB_NAME: shortener_db
      DB_USER: shortener_user
      DB_PASSWORD: secretpw

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint
        run: |
          pip install flake8
          flake8 .

      - name: Run tests
        run: |
          python manage.py test

  build-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Configure gcloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}

      - name: Build & push Docker image
        run: |
          docker build --platform linux/amd64 -t $IMAGE .
          docker push $IMAGE

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy url-shortener-service \
            --image $IMAGE \
            --region us-central1 \
            --platform managed \
            --allow-unauthenticated \
            --add-cloudsql-instances ${{ secrets.INSTANCE_CONN }} \
            --set-env-vars=DB_HOST=/cloudsql/${{ secrets.INSTANCE_CONN }},DB_NAME=shortener_db,DB_USER=shortener_user,ALLOWED_HOSTS='.run.app' \
            --set-secrets=DB_PASSWORD=db-password:latest \
            --timeout=300s \
            --concurrency=80
